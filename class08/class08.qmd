---
title: "Class 8: Machine Learning Mini-Project"
author: "Suzanne Enos"
format: pdf
---

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.df)
```

> Q1. How many samples in the dataset?

```{r}
nrow(wisc.df)
```

> Q2. How many malignant (M) and benign (B) samples are there?

```{r}
sum(wisc.df$diagnosis == "M")
```

```{r}
table(wisc.df$diagnosis)
```

> Q3. How many variables/features in the data are suffixed with "_mean"?

```{r}
grep("_mean", colnames(wisc.df))
```

> What features are "mean" values?

```{r}
grep("_mean", colnames(wisc.df), value = T)
```

Need to remove the first diagnosis column from my data before doing any analysis. I will store it for later as a factor
```{r}
wisc.data <- wisc.df[,-1]
diagnosis <- as.factor(wisc.df$diagnosis)
head(wisc.data)
```

# 2. Principal Component Analysis
The main PCA function in base R is called `prcomp()`

Before doing anything like PCA, t is important to check if the data need to be scaled before performing PCA. Recall two common reasons for scaling data include:

- The input variables use different units of measurement.
- The input variables have significantly different variances.
```{r}
round(apply(wisc.data, 2, sd), 2)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale = T)
summary(wisc.pr)
```

Look at cumulative proportion to see how much of the data was capture after each additional principal component. 
> From your results, what proportion of the original variance is captured by the first principal components (PC1)?
44.27%

> Q5. How many PCs to describe at least 70% of the original variance in the data?
3
> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
7

```{r}
attributes(wisc.pr)
```

Make a scree plot.

```{r}
pr.var <- wisc.pr$sdev^2
#Proportion of variance
pve <- pr.var/sum(pr.var)
plot(pve, type = "o")
```
PC3 looks like inflection point.

Let's make our main results figure from our PCA - our score plot (aka "PC plot", "PC1 vs PC2", )

```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) + 
  aes(PC1, PC2, col = diagnosis) +
  geom_point()
```
## Hierarchical clustering

First, we need to scale the data.
```{r}
data.scaled <- scale(wisc.data)
```
```{r}
apply(data.scaled, 2, sd)
```

We find the distance between all pairs in the scaled dataset.

```{r}
data.dist <- dist(data.scaled)
```
We then create a hierarchical clustering model using complete linkage.

```{r}
wisc.hclust <- hclust(data.dist)
wisc.hclust
```

```{r}
plot(wisc.hclust)
```
> Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty = 2)
```
To get a cluster membership vector I will use the `cutree()` function and "cut" into 4 or so grps or clusters
```{r}
grps <- cutree(wisc.hclust, h=19)
table(grps)
```
Cross tabulate with diagnosis
```{r}
table(grps, diagnosis)
```

## Clustering on PCA results

I can cluster in PC-space and use as many or as few PCs as I want. 
To start with I will use 3 PCs - cluster along PC1, PC2, PC3.

```{r}
pc.dist <- dist(wisc.pr$x[,1:3])
wisc.pr.hclust <- hclust(pc.dist, method = "ward.D2")
plot(wisc.pr.hclust)
```

This dendrogram shows two main clusters - are these malignant and benign?
```{r}
grps <- cutree(wisc.pr.hclust, k = 2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

We could calculate **accuracy** - the proportion of samples we got correct if we take cluster 1 to represent all M and cluster 2 to represent all B.
```{r}
(179+333)/nrow(wisc.data)
```
Sensitivity - ability to correctly detect ill patients

```{r}
179/(179+24)

```

Specificity - ability to correctly reject healthy patients

```{r}
333/(333+33)
```

## Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
```


```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q16. Which of these new patients should we prioritize for follow up based on your results?
Should prioritize follow up with patient 2 becuase they fall in the cluster that is mostly malignant samples.
