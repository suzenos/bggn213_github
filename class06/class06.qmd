---
title: "Class 6: R functions"
author: "Suzanne Enos"
format: gfm
---
## Functions in R
Developing a function for calculating average grades for students in a class.
Start with a simplified version of the problem where you know what the answer will be. 

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

To get the average we can use the function `mean()`.
```{r}
mean(student1)
```

The `min()` function will return the smallest value

```{r}
min(student1)
```

and the related function `which.min()`
```{r}
which.min(student1)
```

```{r}
student1
```

Minus sign in brackets will remove that value from the vector.

```{r}
mean(student1[-which.min(student1)])
```

What about the other students?

```{r}
mean(student2[-which.min(student2)])
```
Try out different parts of the function to test what works and find what is causing the problem
```{r}
which.min(student2)
```
```{r}
student2[-which.min(student2)]
```
Need to change `mean()` default so it removes NA before averaging.
```{r}
mean(student2[-which.min(student2)], na.rm = TRUE)
```

```{r}
mean(student3, na.rm = TRUE)
```

Need to replace NA with 0.
We can maybe use the `is.na` function to help here but how does it work?

```{r}
student2
is.na(student2)
```

```{r}
student2[is.na(student2)] <- 0
student2
```

```{r}
x <- student2
x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

```{r}
x <- student3
x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

We now have a working code snippet that can become that body of our function.

Recall that all functions in R have at least 3 things:
- name (we pick this)
- arguments (input to the function)
- body (where the work gets done)

```{r}
grade <- function(x) {
  #Map NA values to zero to treat missing assignments as 0
  x[is.na(x)] <- 0
  #Drop lowest score and find the mean
  mean(x[-which.min(x)])
}
```

Let's use this new function `grade()`

```{r}
grade(student3)
```
> Q1. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” 

To read this CSV file we are going to use the `read.csv()`.
First column in the file is the row names, so we need to fix this.
```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names = 1)
head(gradebook)
```

Use `apply()` to apply function to data set (to grade all the students). 
2nd argument
- 1 to apply function across rows
- 2 to apply function across columns

```{r}
results <- apply(gradebook, 1, grade)
results
```

> Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook?

```{r}
which.max(results)
```

> Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall?

We could calculate the mean for the homeworks (columns in the gradebook)
```{r}
which.min(apply(gradebook, 2, mean, na.rm = T))
```

Could just add the scores.
```{r}
which.min(apply(gradebook, 2, sum, na.rm = T))
```

Need to mask those NA values to zero

```{r}
mask <- gradebook
mask[ is.na(mask)] <- 0
mask
```
```{r}
apply(mask, 2, mean)
which.min(apply(mask, 2, mean))
```

> Q4. From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)?

```{r}
cor(mask$hw5, results)
cor(mask$hw2, results)
```

```{r}
apply(mask, 2, cor, y = results)
```
