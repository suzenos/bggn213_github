---
title: "Class 13: RNASeq Mini Project"
author: "Suzanne Enos"
format: pdf
---

# Read the countData and colData

```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names = 1)
head(countData)
```

```{r}
colData <- read.csv("GSE37704_metadata.csv")
head(colData)
```
 > Q. Do these match - No so lets fix them
 
```{r}
countData <- countData[,-1]
#countData[, colData$id]
```

```{r}
colnames(countData) == colData$id
```
 
> Remove zero count genes

```{r}
head(countData)
```

```{r}
counts <- countData[rowSums(countData[])>0,]
head(counts)
```

> Q. How many genes do we have left?

```{r}
nrow(counts)
```

# PCA as quality control

```{r}
pc <- prcomp(t(counts), scale = TRUE)
summary(pc)
```

> Q. How much variance is captured in the first two PCs?

81.82%

> Q. What does your score plot (PC1 vs PC2) look like when colored by condition (control/lockdown)

```{r}
library(ggplot2)

x <- as.data.frame(pc$x)

ggplot(x) +
  aes(PC1, PC2, col = as.factor(colData$condition)) +
  geom_point()
```

# DeSeq Analysis

```{r}
library(DESeq2)

dds <- DESeqDataSetFromMatrix(countData = counts,
                              colData = colData,
                              design = ~condition)

dds <- DESeq(dds)

res <- results(dds)
res 
```

# Summary plot

```{r}
mycols <- rep("gray", nrow(res))
mycols[abs(res$log2FoldChange) > 2] <- "blue"
mycols[res$padj > 0.05] <- "gray"

plot( res$log2FoldChange, -log(res$padj), col = mycols )
abline(v = c(-2,2), lty=2)
```
```{r}
library(AnnotationDbi)
library("org.Hs.eg.db")

columns(org.Hs.eg.db)
```

```{r}
res$symbol <- mapIds(org.Hs.eg.db, 
                     keys = rownames(counts),
                     keytype = "ENSEMBL",
                     column = "SYMBOL")

res$entrez <- mapIds(org.Hs.eg.db, 
                     keys = rownames(counts),
                     keytype = "ENSEMBL",
                     column = "ENTREZID")
head(res)
```

# Pathway analysis

```{r}
library(gage)
library(gageData)
library(pathview)
```

Need to create the input for gage() - a vector of fold change values with entrez IDs as the names()

```{r}
foldchange <- res$log2FoldChange
names(foldchange) <- res$entrez
```

```{r}
data(kegg.sets.hs)

keggres <- gage(foldchange, gsets = kegg.sets.hs)
head(keggres$less)
```

```{r}
pathview(foldchange, pathway.id = "hsa04110")
```
```{r}
pathview(gene.data=foldchange, pathway.id="hsa04110", kegg.native=FALSE)
```

# Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchange, gsets=gobpsets, same.dir=TRUE)

head(gobpres$less)
```

Write out a text file of our genes for reactions

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

